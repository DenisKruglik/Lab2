-- MySQL Script generated by MySQL Workbench
-- 02/18/18 18:48:01
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema study_load
-- -----------------------------------------------------
-- 'teachers ' table describes teachers, keeps their id and basic information
-- 'subjects' table keeps id and information about subjects
-- 'lessons' connects teachers and subjects with many-to-many relation and keeps the group number

-- -----------------------------------------------------
-- Schema study_load
--
-- 'teachers ' table describes teachers, keeps their id and basic information
-- 'subjects' table keeps id and information about subjects
-- 'lessons' connects teachers and subjects with many-to-many relation and keeps the group number
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `study_load` DEFAULT CHARACTER SET utf8 ;
USE `study_load` ;

-- -----------------------------------------------------
-- Table `study_load`.`teachers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `study_load`.`teachers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `grade` VARCHAR(45) NOT NULL,
  `post` VARCHAR(45) NOT NULL,
  `experience` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `name` (`name` ASC)  COMMENT 'Index for finding teacher by name')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `study_load`.`subjects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `study_load`.`subjects` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(100) NOT NULL,
  `hours` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `study_load`.`lessons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `study_load`.`lessons` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `teacher_id` INT NOT NULL,
  `subject_id` INT NOT NULL,
  `group` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `teacher_id_idx` (`teacher_id` ASC),
  INDEX `subject_id_idx` (`subject_id` ASC),
  CONSTRAINT `teacher_id`
    FOREIGN KEY (`teacher_id`)
    REFERENCES `study_load`.`teachers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `subject_id`
    FOREIGN KEY (`subject_id`)
    REFERENCES `study_load`.`subjects` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `study_load`.`teachers`
-- -----------------------------------------------------
START TRANSACTION;
USE `study_load`;
INSERT INTO `study_load`.`teachers` (`id`, `name`, `grade`, `post`, `experience`) VALUES (1, 'Блинов Игорь Батькович', 'академик', 'доцент', 100);
INSERT INTO `study_load`.`teachers` (`id`, `name`, `grade`, `post`, `experience`) VALUES (2, 'Романчик Валерий Станиславович', 'профессор', 'глава кафедры', 999);
INSERT INTO `study_load`.`teachers` (`id`, `name`, `grade`, `post`, `experience`) VALUES (3, 'Кремень Елена Васильевна', 'профессор', 'доцент', 150);

COMMIT;


-- -----------------------------------------------------
-- Data for table `study_load`.`subjects`
-- -----------------------------------------------------
START TRANSACTION;
USE `study_load`;
INSERT INTO `study_load`.`subjects` (`id`, `title`, `hours`) VALUES (1, 'Методы программирования и информатика', 500);
INSERT INTO `study_load`.`subjects` (`id`, `title`, `hours`) VALUES (2, 'Веб-программирование', 300);

COMMIT;


-- -----------------------------------------------------
-- Data for table `study_load`.`lessons`
-- -----------------------------------------------------
START TRANSACTION;
USE `study_load`;
INSERT INTO `study_load`.`lessons` (`id`, `teacher_id`, `subject_id`, `group`) VALUES (1, 1, 1, 2);
INSERT INTO `study_load`.`lessons` (`id`, `teacher_id`, `subject_id`, `group`) VALUES (2, 1, 1, 9);
INSERT INTO `study_load`.`lessons` (`id`, `teacher_id`, `subject_id`, `group`) VALUES (3, 2, 2, 2);
INSERT INTO `study_load`.`lessons` (`id`, `teacher_id`, `subject_id`, `group`) VALUES (4, 3, 1, 2);

COMMIT;

